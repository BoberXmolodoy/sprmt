map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

upstream aggregator {
	server aggregator:${SPRMT_BACKEND_BIND_PORT};
}

upstream ${SPRMT_BACKEND_MQTT_HOST} {
	server ${SPRMT_BACKEND_MQTT_HOST}:${MQTT_WS_PORT};
}

server {
	listen ${HTTP_FE_PORT} default_server;
	server_name _;

	location / {
		proxy_pass http://aggregator;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

	}

	location ${SPRMT_FRONTEND_MQTT_PATH} {
		proxy_pass http://${SPRMT_BACKEND_MQTT_HOST};

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header REMOTE-HOST $remote_addr;
		proxy_buffering off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_connect_timeout 10s;
		# WebSocket connection timeout
		# If there's no data exchange within this time, the WebSocket connection will automatically disconnect; default is 60s
		proxy_send_timeout 3600s;
		proxy_read_timeout 3600s;
	}

	location /health {
		return 200 'alive';
		add_header Content-Type text/plain;
	}
}